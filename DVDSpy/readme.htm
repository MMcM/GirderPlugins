<html>

<head>
<!-- $Header$ -->
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta http-equiv="Content-Language" content="en-us">
<title>DVDSpy plug-in</title>
</head>

<body>

<h1>Girder plug-in for software DVD players</h1>
Version 1.60. &nbsp;MMcM 04/04

<h3>Files</h3>
These are the files contained in this archive and what purpose they serve.
<ul>

<li><kbd>readme.htm</kbd><br/>
This file.<p>
</li>

<li><kbd>DVDSpy.dll</kbd><br/>
The Girder plug-in proper.<p>

This file must be placed in the <kbd>Plugins</kbd> folder
beneath where Girder is installed.<p>
</li>

<li><kbd>DisplaySpyHook.dll</kbd><br/>
The Windows hook DLL.<p>

This file must be placed in the same folder where Girder is installed.<p>
</li>

<li><kbd>DVDSpy.reg</kbd><br/>
Registry settings for the plug-in.<p>

Run this file to merge its settings into the Windows registry.  This
will inform the Learn command of DVDSpy Girder events that are not
defined within the plug-in itself.<p>

It will also point to the default DVD titles CSV file (see <a
href="#DVDTitles">below</a>).<p> 
</li>

<li><kbd>MediaSpy.dll</kbd><br/>
An ActiveX wrapper for DirectShow objects.<p>

This file is needed for spying on DirectShow-based applications, such
as Zoom Player, TheaterTek, ShowShifter, and ATI Player.  It should be
copied to any convenient folder (the Girder installation folder is
fine) and self-registered by running <kbd>regsvr32 MediaSpy.dll</kbd>.<p>
</li>

<li><kbd>WMPSpy.dll</kbd><br/>
A Windows Media Player skins control extension.<p>

This file is needed for spying on Windows Media Player.  It should be
copied to any convenient folder (the Girder installation folder is
fine) and self-registered by running <kbd>regsvr32 WMPSpy.dll</kbd>.
See <a href="#WMPSpy">below</a> for more information.<p>
</li>

<li><kbd>WMPSpy.wmz</kbd><br/>
A Windows Media Player skin that sends events to DVDSpy.<p>

This file (or one like it) is needed for spying on Windows Media
Player version 7.  It is not needed for WMP 9.
It should be copied to the Windows Media Player skins folder, which is
usually <kbd>c:\Program Files\Windows Media Player\Skins</kbd>.  See
<a href="#WMPSpy">below</a> for more information.<p>
</li>

<li><kbd>RealSpy.dll</kbd><br/>
A RealSystem plug-in that sends events to DVDSpy.<p>

This file is needed for spying on RealOne Player.  It should be copied
to the Real plug-ins directory, which is usually 
<kbd>c:\Program Files\Common Files\Real\Plugins</kbd>.
See <a href="#Real">below</a> for more information.<p>
</li>

<li><kbd>gen_DVDSpy.dll</kbd><br/>
A Winamp plugin that sends events to DVDSpy.<p>

This file is needed for spying on Winamp (version 2 or 5).  It should
be copied to the Winamp plugins folder, which is usually
<kbd>C:\Program Files\Winamp\Plugins</kbd>.
See <a href="#Winamp">below</a> for more information.<p>
</li>

<li><kbd>int_DVDSpy.dll</kbd><br/>
A Media Jukebox plug-in that sends events to DVDSpy.<p>

This file is needed for spying on Media Jukebox.  It works with
version 8 or 9; it does not work with version 7.2.  It should be
copied to any convenient folder (the Girder installation folder is
fine) and self-registered by running <kbd>regsvr32 int_DVDSpy.dll</kbd>.
Once registered, it should show up in Media Jukebox's Plug-in Manager.
See <a href="#MJ">below</a> for more information.<p>
</li>

<li><kbd>ShowShifterSpy.dll</kbd><br/>
A ShowShifter Control Module that sends events to DVDSpy.<p>

This file is needed for spying on ShowShifter at the UI level.  It
works with version 3.01.  It should be copied to any convenient folder
(the Girder installation folder is fine, as is the ShowShifter folder)
and self-registered by running <kbd>regsvr32 ShowShifterSpy.dll</kbd>.
If not installed in the ShowShifter directory, that directory will
need to be in the Windows path while registering.  Nothing special
needs to be done for it to run properly, only to register.  See
<a href="#ShowShifter">below</a> for more information on ShowShifter
UI events.<p>
</li>

<li><kbd>TVSpy.exe</kbd><br/>
A helper application to lookup program guide information and/or switch
an external TV tuner such as a set-top box.
See <a href="#TV">below</a> for more information.<p>
</li>

<li><kbd>DVDSpy.cmd</kbd><br/>
A shell script to install and register all files.<p>

You should look through this file and make sure everything is
appropriate to your system <em>before</em> running it.<p>
</li>

<li><kbd>ROTEnable.reg</kbd><br/>
A registry setting which will allow the DirectX GraphEdit tool to
Connect to any application's filter graph.<p>

This file is not needed for normal Girder operation.<p>
</li>

<li><kbd>event-changes.txt</kbd><br/>
An outline of the changes to the event naming convention over various
releases of this plug-in.<p>

This file is only needed for converting old Girder scripts to a newer
version of the plug-in.<p>
</li>

<li><kbd>DVDTitles.csv</kbd><br/>
A sample DVD titles CSV file.<p>

This file is the database of DVD titles returned by the disc insert
event.  See <a href="#DVDTitles">below</a> for more information.<p>
</li>

<li><kbd>DVDData.vbs</kbd><br/>
A VBScript program to get title information from windowsmedia.com.<p>

This file downloads DVD title and chapter information and returns it to Girder
as events.  See <a href="#DVDData">below</a> for more information.<p>
</li>

<li><kbd>DVD2LCD4.GML</kbd>, <kbd>DVD2LCD2.GML</kbd><br/>
Sample Girder scripts.<p>

These files show how to use the DVDSpy plug-in with the LCD plug-in to
display player status on 4x20 and 2x20 displays, respectively.  They
require the LCD, Alarm Timer, and Switch plug-ins.  If the Winamp3
group is enabled, that plug-in is needed.  Likewise MBM.  The LUA
version of GVMS (the default) is required.<p>
</li>

<li><kbd>DVDChars.lua</kbd><br/>
A LUA script for setting global variables that define custom characters.<p>

This is used by <kbd>DVD2LCD?.GML</kbd>.<p>
</li>

<li><kbd>weather.js</kbd><br/>
A JScript program for getting weather information and putting it into
Girder variables.<p>

The Weather group in <kbd>DVD2LCD?.GML</kbd> uses this.<p>
</li>

<li><kbd>WeatherSettings.lua</kbd><br/>
A LUA script for setting global variables related to weather.<p>

The Weather group in <kbd>DVD2LCD?.GML</kbd> uses this.  Adjust the
settings for your location according to the comments in the file.<p>
</li>

<li><kbd>DVD2OSD.GML</kbd><br/>
Another sample Girder script.<p>

This file shows how to use the DVDSpy plug-in with the OSD PopUp plug-in to
display player status in a pop-up window.<p>
</li>

<li><kbd>DVDInsert.GML</kbd><br/>
Another sample Girder script.<p>

This file shows how to use the DVD title information in the
Disc.Insert event to switch resolutions.<p>
</li>

<li><kbd>WinDVD3.reg</kbd>, <kbd>WinDVD4.reg</kbd>, <kbd>WinDVD4PR.reg</kbd>, <kbd>WinDVD5.reg</kbd><br/>
Registry settings corresponding to the default skins in WinDVD 3,
WinDVD 4, and WinDVD 4 Platinum, and WinDVD 5 Platinum respectively.
DVDSpy.reg also contains the default skin for WinDVD 5 Platinum.
(See <a href="#Skinned">below</a> for more information.)<p>

These files are not needed for normal Girder operation.<p>
</li>

</ul>

<h3>Getting Started</h3>

If you have an LCD or VFD display and the LCD plug-in is installed and
working, you can try to display events from player applications using
the included same script.<p>

Otherwise, you can use the included OSD sample script.<p>

Here is a step-by-step procedure building a new script like that one.<p>

<ul>

<li>Copy the DVDSpy files that you see need from the list above.

<li>Download and install the pop-up OSD plug-in if you have not already done so.

<li>Launch Girder.

<li>From the File>Settings... dialog, under Plugins, enable DVDSpy and
OSD PopUp.

<li>Add a new command with Edit>Add Command.

<li>Assign a DVDSpy event to this command.
<ul>
<li>Do File>Enable Input Devices.
<li>Select DVDSpy from the combo-box to the left of Learn Event.
<li>Click Learn Event.
<li>From the DVDSpy learn list, select an event for a player
application that is installed and working.  Elapsed time events are a
good choice.  See <a href="#Events">below</a> for a list of DVDSpy events.
<li>Click Learn and then Close.
<li>The event that you chose should appear in the "LED" display.
</ul>

<li>Assign an OSD PopUp action to this command.
<ul>
<li>Select the Plugins tab from the actions at the bottom of the screen.
<li>Select OSD PopUp from the list beneath that tab.
<li>Click Settings to display the OSD PopUp action settings for the command.
<li>Replace <kbd>Place text here</kbd> with <kbd>[pld1]</kbd>.
<li>Click OK.
</ul>

<li>Launch the chosen player application and start it playing
something.  You should see a pop-up display when the state changes.
If you chose an elapsed time event, this will be every second.

<li>If you do not see anything, you can install the Logger action
plugin to see each event.  If you do not see any DVDSpy events, then
double check the installation of the plug-in and its support files.
If you do see events, then double check the OSD PopUp settings.
</ul>

<h3>Events</h3>
<a name="Events"/>

<table border="yes">
<tr><th>Code</th>
<th>Meaning</th>
<th>Payload String 1</th>
<th>Other Payload Strings</th>
</tr>

<tr><td><code>Disc.Contents.<i>X</i></code><br><code>Disc.Insert.<i>X</i></code></td>
<td>A DVD was initally present or newly inserted into drive <i>X:</i></td>
<td>The volume name or disc title (see <a href="#DVDTitles">below</a>)</td>
<td width="250"><b>2:</b>volume serial number (32-bit hex),<br>
<b>3:</b>aspect ratio (<code>4:3</code>,<code>16:9</code>,<code>unknown</code>),<br>
<b>4:</b>display format (<code>none</code>,<code>letterbox</code>,<code>pan-scan</code>,<code>both</code>),<br>
<b>5:</b>video standard (<code>NTSC</code>,<code>PAL</code>),<br>
<b>6:</b>enabled regions (<code>12345678</code>),<br>
<b>7:</b>DVD disc id (64-bit hex)</td>
</tr>

<tr><td><code>Disc.Eject.<i>X</i></code></td>
<td>The DVD was ejected from drive <i>X:</i></td>
</tr>

<tr></tr>

<tr><td><code>WinDVD.Status</code></td>
<td>Player status changed</td>
<td>New status (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>,<code>Rewind</code>,<code>FF</code>)</td>
</tr>

<tr><td><code>WinDVD.Elapsed</code></td>
<td>Elapsed time changed</td>
<td>New time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>WinDVD.Chapter</code></td>
<td>Chapter changed</td>
<td>New chapter (<code>NN</code>)</td>
</tr>

<tr><td><code>WinDVD.Close</code></td>
<td>WinDVD application closed</td>
</tr>

<tr></tr>

<tr><td><code>PowerDVD.Status</code></td>
<td>Player status changed</td>
<td>New status (<code>Playing</code>,<code>Paused</code>,<code>Still</code>,<code>Stopped</code>,<code>Eject</code>)</td>
</tr>

<tr><td><code>PowerDVD.Elapsed</code></td>
<td>Elapsed time changed</td>
<td>New time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>PowerDVD.TitleNo</code></td>
<td>Title changed</td>
<td>New title number (<code>NN</code>)</td>
</tr>

<tr><td><code>PowerDVD.Chapter</code></td>
<td>Chapter changed</td>
<td>New chapter (<code>NN</code>)</td>
</tr>

<tr><td><code>PowerDVD.OSD</code>, <code>OSD.2</code>, <code>OSD.3</code></td>
<td>OSD caption line changed</td>
<td>New OSD message (<code>Play</code>, <code>Pause</code>, ...)</td>
</tr>

<tr><td><code>PowerDVD.Close</code></td>
<td>PowerDVD application closed</td>
</tr>

<tr></tr>

<tr><td><code>accessDTV.ChanText</code></td>
<td>The channel description changed</td>
<td>New description (<code>NNN.n XXXX_XX</code>)</td>
</tr>

<tr><td><code>accessDTV.ChanNoText</code></td>
<td>The channel description was not present</td>
</tr>

<tr><td><code>accessDTV.Channel</code></td>
<td>The big channel digits changed</td>
<td>New digits (<code>NN.n</code>)</td>
</tr>

<tr><td><code>accessDTV.Duration</code></td>
<td>File duration changed</td>
<td>New total duration (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>accessDTV.Elapsed</code></td>
<td>File position changed</td>
<td>New elapsed time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>accessDTV.Close</code></td>
<td>ADTV application closed</td>
</tr>

<tr></tr>

<tr><td><code>ZoomPlayer.DVD.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.DVD.VideoPosition</code></td>
<td>Video window position changed</td>
<td width="250">New sizes (window width, window height, window left,
window top; destination width, destination height, destination left,
destination top; source width, source height, source left, source
top)</td>
</tr>

<tr><td><code>ZoomPlayer.DVD.Domain</code></td>
<td>Domain changed</td>
<td>New domain (<code>PLAY</code>,<code>MENU</code>,<code>DVD</code>,<code>STOP</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.DVD.TitleNo</code></td>
<td>Title changed</td>
<td>New title number (<code>NN</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.DVD.Chapter</code></td>
<td>Chapter changed</td>
<td>New chapter (<code>NN</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.DVD.Duration</code></td>
<td>Total changed</td>
<td>New total time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.DVD.Elapsed</code></td>
<td>Position changed</td>
<td>New elapsed time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.Media.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.Media.VideoPosition</code></td>
<td>Video window position changed</td>
<td width="250">New sizes (window width, window height, window left,
window top; destination width, destination height, destination left,
destination top; source width, source height, source left, source
top)</td>
</tr>

<tr><td><code>ZoomPlayer.Media.Duration</code></td>
<td>Duration changed</td>
<td>New total duration (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.Media.Elapsed</code></td>
<td>Position changed</td>
<td>New elapsed time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.Media.File</code></td>
<td>Source changed</td>
<td>New source file name</td>
</tr>

<tr><td><code>ZoomPlayer.OSD</code></td>
<td>OSD caption changed</td>
<td>New OSD message (<code>Play</code>, <code>Pause</code>, ...)</td>
</tr>

<tr><td><code>ZoomPlayer.Close</code></td>
<td>ZP application closed</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.State</code></td>
<td>ZP state changed</td>
<td>New state (<code>Closed</code>, <code>Stopped</code>, <code>Paused</code>, <code>Playing</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.Time</code></td>
<td>ZP time position changed</td>
<td>New time line information</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.OSD</code></td>
<td>OSD caption changed</td>
<td>New OSD message (<code>Play</code>, <code>Pause</code>, ...)</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.OSD.Off</code></td>
<td>OSD caption removed</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.Mode</code></td>
<td>Player mode changed</td>
<td>New mode (<code>DVD</code>, <code>Media</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.DVD.Title</code></td>
<td>DVD Title changed</td>
<td>New title number</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.DVD.Chapter</code></td>
<td>DVD Chapter changed</td>
<td>New chapter number</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.DVD.Audio</code></td>
<td>DVD audio mode changed</td>
<td>New audio track (<code>2ch:English [AC3]</code>)</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.DVD.Sub</code></td>
<td>DVD subtitles changed</td>
<td>New subtitle language</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.File</code></td>
<td>Media file changed</td>
<td>New file name</td>
</tr>

<tr><td><code>ZoomPlayer.LCD.Position</code></td>
<td>Playlist position changed</td>
<td>New position (<code>1/2</code>)</td>
</tr>

<tr></tr>

<tr><td><code>TheaterTek.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>TheaterTek.VideoPosition</code></td>
<td>Video window position changed</td>
<td width="250">New sizes (window width, window height, window left,
window top; destination width, destination height, destination left,
destination top; source width, source height, source left, source
top)</td>
</tr>

<tr><td><code>TheaterTek.Domain</code></td>
<td>Domain changed</td>
<td>New domain (<code>PLAY</code>,<code>MENU</code>,<code>DVD</code>,<code>STOP</code>)</td>
</tr>

<tr><td><code>TheaterTek.TitleNo</code></td>
<td>Title changed</td>
<td>New title number (<code>NN</code>)</td>
</tr>

<tr><td><code>TheaterTek.Chapter</code></td>
<td>Chapter changed</td>
<td>New chapter (<code>NN</code>)</td>
</tr>

<tr><td><code>TheaterTek.Duration</code></td>
<td>Total changed</td>
<td>New total time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>TheaterTek.Elapsed</code></td>
<td>Position changed</td>
<td>New elapsed time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>TheaterTek.Close</code></td>
<td>TT application closed</td>
</tr>

<tr></tr>

<tr><td><code>CinePlayer.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>CinePlayer.VideoPosition</code></td>
<td>Video window position changed</td>
<td width="250">New sizes (window width, window height, window left,
window top; destination width, destination height, destination left,
destination top; source width, source height, source left, source
top)</td>
</tr>

<tr><td><code>CinePlayer.Domain</code></td>
<td>Domain changed</td>
<td>New domain (<code>PLAY</code>,<code>MENU</code>,<code>DVD</code>,<code>STOP</code>)</td>
</tr>

<tr><td><code>CinePlayer.TitleNo</code></td>
<td>Title changed</td>
<td>New title number (<code>NN</code>)</td>
</tr>

<tr><td><code>CinePlayer.Chapter</code></td>
<td>Chapter changed</td>
<td>New chapter (<code>NN</code>)</td>
</tr>

<tr><td><code>CinePlayer.Duration</code></td>
<td>Total changed</td>
<td>New total time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>CinePlayer.Elapsed</code></td>
<td>Position changed</td>
<td>New elapsed time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>CinePlayer.Close</code></td>
<td>TT application closed</td>
</tr>

<tr></tr>

<tr><td><code>ATI.DVD.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>ATI.DVD.Domain</code></td>
<td>Domain changed</td>
<td>New domain (<code>PLAY</code>,<code>MENU</code>,<code>DVD</code>,<code>STOP</code>)</td>
</tr>

<tr><td><code>ATI.DVD.TitleNo</code></td>
<td>Title changed</td>
<td>New title number (<code>NN</code>)</td>
</tr>

<tr><td><code>ATI.DVD.Chapter</code></td>
<td>Chapter changed</td>
<td>New chapter (<code>NN</code>)</td>
</tr>

<tr><td><code>ATI.DVD.Duration</code></td>
<td>Total changed</td>
<td>New total time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ATI.DVD.Elapsed</code></td>
<td>Position changed</td>
<td>New elapsed time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ATI.MMC.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>ATI.MMC.Duration</code></td>
<td>Duration changed</td>
<td>New total duration (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ATI.MMC.Elapsed</code></td>
<td>Position changed</td>
<td>New current position (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ATI.MMC.File</code></td>
<td>Source changed</td>
<td>New source file name</td>
</tr>

<tr><td><code>ATI.Close</code></td>
<td>ATI application closed</td>
</tr>

<tr><td><code>ATI.TV.Channel</code></td>
<td>TV channel changed</td>
<td>New channel number</td>
</tr>

<tr></tr>

<tr><td><code>WMP.Status</code></td>
<td>Media player status changed</td>
<td>New player status</td>
</tr>

<tr><td><code>WMP.Duration</code></td>
<td>Media duration changed</td>
<td>New total time (<code>MM:SS</code>)</td>
</tr>

<tr><td><code>WMP.Elapsed</code></td>
<td>Media player position changed</td>
<td>New elapsed time (<code>MM:SS</code>)</td>
</tr>

<tr><td><code>WMP.URL</code></td>
<td>Media source changed</td>
<td>New current media URL</td>
</tr>

<tr><td><code>WMP.Title</code></td>
<td>Media name changed</td>
<td>New current media name</td>
</tr>

<tr><td><code>WMP.Close</code></td>
<td>Media player closed</td>
</tr>

<tr></tr>

<tr><td><code>Real.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>Real.Buffering</code></td>
<td>Playback is buffering</td>
<td>Percentage complete</td>
</tr>

<tr><td><code>Real.Contacting</code></td>
<td>Playback is contacting remote host</td>
<td>Host name</td>
</tr>

<tr><td><code>Real.Duration</code></td>
<td>Total time changed</td>
<td>New total time (<code>MM:SS</code>)</td>
</tr>

<tr><td><code>Real.Elapsed</code></td>
<td>Time position changed</td>
<td>New elapsed time (<code>MM:SS</code>)</td>
</tr>

<tr><td><code>Real.URL</code></td>
<td>Media source changed</td>
<td>New current media URL</td>
</tr>

<tr><td><code>Real.Title</code></td>
<td>Media title changed</td>
<td>New current title</td>
</tr>

<tr><td><code>Real.Author</code></td>
<td>Media author changed</td>
<td>New current author</td>
</tr>

<tr><td><code>Real.Close</code></td>
<td>Program closed</td>
</tr>

<tr></tr>

<tr><td><code>Winamp.Status</code></td>
<td>Status changed</td>
<td>New status (<code>STOP</code>, <code>PLAY</code>, <code>PAUSE</code>)</td>
</tr>

<tr><td><code>Winamp.Length</code></td>
<td>Playlist length changed</td>
<td>New playlist length</td>
</tr>

<tr><td><code>Winamp.Position</code></td>
<td>Playlist position changed</td>
<td>New playlist position (1-based)</td>
</tr>

<tr><td><code>Winamp.Duration</code></td>
<td>Total time changed</td>
<td>New total time (<code>MM:SS</code>)</td>
</tr>

<tr><td><code>Winamp.Elapsed</code></td>
<td>Time position changed</td>
<td>New elapsed time (<code>MM:SS</code>)</td>
</tr>

<tr><td><code>Winamp.File</code></td>
<td>Track file changed</td>
<td>New current filename</td>
</tr>

<tr><td><code>Winamp.Title</code></td>
<td>Track title changed</td>
<td>New current title</td>
</tr>

<tr><td><code>Winamp.Close</code></td>
<td>Program closed</td>
</tr>

<tr></tr>

<tr><td><code>ShowShifter.DVD.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>ShowShifter.DVD.Domain</code></td>
<td>Domain changed</td>
<td>New domain (<code>PLAY</code>,<code>MENU</code>,<code>DVD</code>,<code>STOP</code>)</td>
</tr>

<tr><td><code>ShowShifter.DVD.TitleNo</code></td>
<td>Title changed</td>
<td>New title number (<code>NN</code>)</td>
</tr>

<tr><td><code>ShowShifter.DVD.Chapter</code></td>
<td>Chapter changed</td>
<td>New chapter (<code>NN</code>)</td>
</tr>

<tr><td><code>ShowShifter.DVD.Duration</code></td>
<td>Total changed</td>
<td>New total time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ShowShifter.DVD.Elapsed</code></td>
<td>Position changed</td>
<td>New elapsed time (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ShowShifter.Media.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>ShowShifter.Media.Duration</code></td>
<td>Duration changed</td>
<td>New total duration (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ShowShifter.Media.Elapsed</code></td>
<td>Position changed</td>
<td>New current position (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>ShowShifter.Media.File</code></td>
<td>Source changed</td>
<td>New source file name</td>
</tr>

<tr><td><code>ShowShifter.Module</code></td>
<td>Active module changed</td>
<td>New module name</td>
</tr>

<tr><td><code>ShowShifter.UI.<i>ident</i></code></td>
<td>UIS control contents changed</td>
<td>New control label string</td>
</tr>

<tr><td><code>ShowShifter.NoUI.<i>ident</i></code></td>
<td>UIS control no longer present</td>
</tr>

<tr><td><code>ShowShifter.Close</code></td>
<td>ShowShifter application closed</td>
</tr>

<tr></tr>

<tr><td><code>BSPlayer.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>BSPlayer.Duration</code></td>
<td>Duration changed</td>
<td>New total duration (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>BSPlayer.Elapsed</code></td>
<td>Position changed</td>
<td>New current position (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>BSPlayer.File</code></td>
<td>Source changed</td>
<td>New source file name</td>
</tr>

<tr><td><code>BSPlayer.Close</code></td>
<td>BSPlayer application closed</td>
</tr>

<tr></tr>

<tr><td><code>PowerDivX.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>PowerDivX.Duration</code></td>
<td>Duration changed</td>
<td>New total duration (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>PowerDivX.Elapsed</code></td>
<td>Position changed</td>
<td>New current position (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>PowerDivX.File</code></td>
<td>Source changed</td>
<td>New source file name</td>
</tr>

<tr><td><code>PowerDivX.Close</code></td>
<td>PowerDivX application closed</td>
</tr>

<tr></tr>

<tr><td><code>MediaJukebox.Playlist.Position</code></td>
<td>Playlist position changed</td>
<td>New playlist position (1-based)</td>
</tr>

<tr><td><code>MediaJukebox.Playlist.Length</code></td>
<td>Playlist length changed</td>
<td>New playlist length</td>
</tr>

<tr><td><code>MediaJukebox.File.Filename</code></td>
<td>Current file changed</td>
<td>New current filename</td>
</tr>

<tr><td><code>MediaJukebox.File.Artist</code></td>
<td>Current file artist changed</td>
<td>New current artist</td>
</tr>

<tr><td><code>MediaJukebox.File.Album</code></td>
<td>Current file album changed</td>
<td>New current album</td>
</tr>

<tr><td><code>MediaJukebox.File.Name</code></td>
<td>Current file changed</td>
<td>New current name</td>
</tr>

<tr><td><code>MediaJukebox.File.Custom1</code></td>
<td>Current file changed</td>
<td>New current file Custom1 field</td>
</tr>

<tr><td><code>MediaJukebox.File.Custom2</code></td>
<td>Current file changed</td>
<td>New current file Custom2 field</td>
</tr>

<tr><td><code>MediaJukebox.File.Custom3</code></td>
<td>Current file changed</td>
<td>New current file Custom3 field</td>
</tr>

<tr><td><code>MediaJukebox.File.FileType</code></td>
<td>Current file changed</td>
<td>New current file type</td>
</tr>

<tr><td><code>MediaJukebox.Playback.State</code></td>
<td>State changed</td>
<td>New state (<code>Stopped</code>, <code>Paused</code>, <code>Playing</code>, <code>Waiting</code>)</td>
</tr>

<tr><td><code>MediaJukebox.Playback.Elapsed</code></td>
<td>Time position changed</td>
<td>New elapsed time (<code>MM:SS</code>)</td>
</tr>

<tr><td><code>MediaJukebox.Playback.Duration</code></td>
<td>Total time changed</td>
<td>New total time (<code>MM:SS</code>)</td>
</tr>

<tr><td><code>MediaJukebox.Close</code></td>
<td>Media Jukebox application closed</td>
</tr>

<tr></tr>

<tr><td><code>RadLight.State</code></td>
<td>Playback state changed</td>
<td>New state (<code>Playing</code>,<code>Paused</code>,<code>Stopped</code>)</td>
</tr>

<tr><td><code>RadLight.Duration</code></td>
<td>Duration changed</td>
<td>New total duration (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>RadLight.Elapsed</code></td>
<td>Position changed</td>
<td>New current position (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>RadLight.File</code></td>
<td>Source changed</td>
<td>New source file name</td>
</tr>

<tr><td><code>RadLight.Close</code></td>
<td>RadLight application closed</td>
</tr>

<tr></tr>

<tr><td><code>Eugenes.Name</code></td>
<td>Current disc name changed</td>
<td>New current name</td>
</tr>

<tr><td><code>Eugenes.TitleNo</code></td>
<td>Title changed</td>
<td>New title number (<code>NN</code>)</td>
</tr>

<tr><td><code>Eugenes.Chapter</code></td>
<td>Chapter changed</td>
<td>New chapter (<code>NN</code>)</td>
</tr>

<tr><td><code>Eugenes.Duration</code></td>
<td>Duration changed</td>
<td>New total duration (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>Eugenes.Elapsed</code></td>
<td>Position changed</td>
<td>New current position (<code>HH:MM:SS</code>)</td>
</tr>

<tr><td><code>Eugenes.Close</code></td>
<td>Eugene's DVD player closed</td>
</tr>

<tr></tr>

<tr><td><code>DVDStation.Title.1</code></td>
<td>Left-hand text field changed</td>
<td>New contents (<code>DVD</code>,<code>DATA</code>,<code>VCD2</code>,<code>SVCD</code>)</td>
</tr>

<tr><td><code>DVDStation.Title.2</code></td>
<td>Right-hand text field changed</td>
<td>New contents (<code>TT CCC HH:MM:SS</code>)</td>
</tr>

<tr><td><code>DVDStation.Close</code></td>
<td>Hollywood+ DVD Station closed</td>
</tr>

</table><p>

<h3>Details</h3>
To completely understand how the various spy techniques used by this
plug-in work, look at the C++ source, which can be downloaded from the
Developers area.  The source distribution also includes <a href="extending.htm">
this document</a> outlining how to add support for a new application.<p>

This plug-in intercepts various Windows messages that are used by
player applications to update their own windows with the information
about the DVD currently being played.  When this information has
changed, a Girder event is generated.  The associated information is
placed in the event payload strings.<p>

It also intercepts calls to Windows drawing functions as used by
PowerDVD and accessDTV and exposes it similarly.<p>

<a name="Skinned"/>
The PowerDVD and WinDVD interfaces are based on user-changeable skins.
Proper decoding of display updates requires accurate understanding of
the positions of various fields.  If a non-standard skin is used,
<kbd>HKEY_LOCAL_MACHINE\Software\Girder3\HardPlugins\DVDSpy\PowerDVD</kbd>
or <kbd>HKEY_LOCAL_MACHINE\Software\Girder3\HardPlugins\DVDSpy\WinDVD</kbd>
must be updated to reflect the correct positions (as given in the skin
file).  PowerDVD additionally requires the size of the status and
number bitmaps used to populate those fields.  DVDSpy.reg contains the
positions for the default skins and can be used as a model for what
values to set.<p>

It wraps DirectX objects used by Zoom Player, TheaterTek, or the newer
versions of the ATI player and exposes the playing state.  This
approach can probably be extended trivially to any other DirectShow
DVD player.  The MEDIASPY.DLL library must be registered using
<kbd>regsvr32</kbd>.  This may impact programs even when Girder is not
running.  Unregistering it should return things to normal.<p>

<a name="ZoomPlayer"/>
Information from Zoom Player comes from two layers.  The state of
DirectShow filter graphs is extracted by MediaSpy, as described above.
Higher level information is also available through Zoom Player's own
LCD API.  These two sources overlap significantly, but neither is a
superset of the other.  In order to receive the
<code>ZoomPlayer.LCD.*</code> events, LCD output must be enabled in
the Zoom Player Options dialog.  Before doing this, be sure that your
script is following the license restrictions on use of this
feature.<p>

<a name="ShowShifter"/>
Information from ShowShifter also comes from two layers.  Again, the
state of DirectShow filter graphs is extracted by MediaSpy, as
described above.  Information is also available about changes in the
contents of controls in the ShowShifter user interface.  ShowShifter
has its own UI system built on top of windows.  The identifiers for
the controls that are monitored are gotten from the registry in
<kbd>HKEY_LOCAL_MACHINE\Software\Girder3\HardPlugins\DVDSpy\ShowShifter\ControlIdents</kbd>.
The identifiers for the controls on a given screen can be found in the
corresponding UIS file in the ShowShifter config directory.<p>

<a name="WMPSpy"/>
It defines an ActiveX control element for use in Windows Media Player
skins and thereby exposes that player's state when a special skin is
used.  The WMPSPY.DLL library must be registered using
<kbd>regsvr32</kbd>.  For WMP 7, it defines a new control element type,
<code>WMPSpy</code>, for use in skin definition (WMS) files.  This
control has two properties, <code>event</code> for the Girder event
name, and <code>value</code> the other for the associated value.  The
control will normally not be visible and will normally use a
<code>wmpprop:</code> listening attribute.  The sample WMPSpy.wmz skin
package (really a ZIP file) shows how to do this; it is based on
Microsoft's <kbd>Classic</kbd> skin.  It can be placed in the
<kbd>c:\Program Files\Windows Media Player\Skins</kbd> directory and
then used with <kbd>?WMPSkin=WMPSpy</kbd> in URLs for content to be
displayed using it.  This skin also makes the player full screen when
playing, since Girder is presumably used to control it directly and to
display its status someplace else.  More information on WMP skins is
available in the Windows Media Player SDK.<p>

In WMP 9, the <code>WMPSpy</code> element is not available, as skins
are no longer extensible.  The <kbd>WMPSkin</kbd> skin still functions
as a skin proper, but does not produce events.  Instead, the same
WMPSPY.DLL defines a background UI plugin.  By default, this plugin is
enabled, but it can be disabled from the WMP Options dialog.  It
produces events no matter which skin is in use.  It may not produce
events when the player is embedded in a web page, since plugins are
controlled separately there.<p>

<a name="Real"/>
It includes a RealSystem plug-in that exposes state changes.<p>

<a name="Winamp"/>
It includes a Winamp general plugin that exposes state changes.  The
file <kbd>gen_DVDSpy.dll</kbd> needs to be copied into the
<kbd>Plugins</kbd> subdirectory of the Winamp installation directory,
which is usually <kbd>C:\Program Files\Winamp</kbd>.  Once installed,
the plugin can be configured from inside Winamp to set the interval
(in milliseconds) at which it checks for state changes.  There is also
a configuration setting for changing the event prefix.  This is only
really useful when running more than one copy of Winamp at the same
time.  Note that Girder must be running before Winamp starts for
communication to be established.<p>

The registry key
<kbd>HKEY_LOCAL_MACHINE\Software\Girder3\HardPlugins\DVDSpy\Events</kbd>
can contain string values that specify events that are generated by
means other than the hook.  This is needed for Learn mode to work
properly from inside Girder.  The file <kbd>DVDSpy.reg</kbd> installs
the events included in this package.<p>

<a name="MJ"/>
It includes a Media Jukebox interface plug-in that exposes state
changes.  The file <kbd>int_DVDSpy.dll</kbd> needs to be
self-registered.  Once installed, the plug-in can be configured from
inside Media Jukebox to set the interval (in milliseconds) at which it
checks for state changes.  Communication between the plug-in and
Girder can also be manually reset, should Girder have started after
Media Jukebox, for instance.<p>

<a name="TV"/>
It includes a helper application for use with TV tuners.  If Guide+ is
installed for an ATI tuner, program information can be obtained for
the current channel.  In this case, the program can be run on a
channel changed event.<p>

If an external TV tuner is controlled by a Slink-e IR blaster, it can
also be switched at the same time.  In this case, the program can be
invoked as the associated command for a channel in ShowShifter.<p>

<a name="DVDTitles"/>
The registry key
<kbd>HKEY_LOCAL_MACHINE\Software\Girder3\HardPlugins\DVDSpy</kbd> can
contain a string value <kbd>DVDTitles</kbd> giving the name of a
comma-separated (CSV) flat file containing a database of disc titles.
The first line of the file is the name of the fields in the file.  The
file must at least contain fields named <kbd>Title</kbd> and
<kbd>Serial Number</kbd>.  It can have any number of additional
fields.<p>

If the disc is not included in the above database, then the PCFriendly
<kbd>disc.id</kbd> file, if present, is used for the title.
Otherwise, the volume name is used as a last resort.<p>

<a name="DVDData"/>
Alternatively, title information can be downloaded from
<a href="http://www.windowsmedia.com">windowsmedia.com</a>.  Windows Media Player
does this when playing DVDs under Windows XP.  An XML formatted file containing
the title name and chapter names is parsed and returned to Girder.  The file
can be cached locally so that it is only downloaded once.<p>

A good place to display the extracted text is on an LCD display, using
the LCD Software plug-in.  See the 
<a href="../../software/lcd/readme.htm">readme</a> file for that plug-in
for more details.  A sample Girder file is included that displays some
information in a format suitable for 4x20 displays.<p>

<h3>Terms</h3>
This plug-in is released as open source under 
<a href="http://www.opensource.org/licenses/mit-license.php">The MIT License</a>.
You use it at your own risk.
See <a href="license.txt"/>license.txt</a> for details.

<h3>Contact</h3>
To report problems or make suggestions, post a message to the Girder
forum, rather than sending email directly.

</body>

</html>
