<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta http-equiv="Content-Language" content="en-us">
<title>LCD plug-in</title>
</head>

<body>

<h1>Girder plug-in for LCD/VFD displays</h1>
Version 2.1. &nbsp;MMcM 09/02

<h3>Files</h3>
These are the files contained in this archive and what purpose they serve.
<ul>

<li><kbd>readme.htm</kbd><br/>
This file.<p>
</li>

<li><kbd>LCD.dll</kbd><br/>
The Girder plug-in proper.<p>

This file must be placed in the <kbd>Plugins</kbd> folder
beneath where Girder is installed.<p>
</li>

<li>Device specific files.<br>
<table>
<tr><td><kbd>simlcd.dll</kbd></td><td>Simulated LCD</td></tr>
<tr><td><kbd>lcdrvr1.dll</kbd></td><td>LCDriver 1.x</td></tr>
<tr><td><kbd>cfontzlcd.dll</kbd></td><td>Crystalfontz</td></tr>
<tr><td><kbd>molcd.dll</kbd></td><td>Matrix Orbital</td></tr>
<tr><td><kbd>paralcd.dll</kbd></td><td>Parallel port</td></tr>
</table><p>

These files must be in the Windows path; it is simplest to put them in
the same folder where Girder is installed.  Only the file(s) for the
device(s) being used is needed.  However, there is no harm in
installing them all.  These are separate files because each depends on
other device driver DLLs that may not be installed at all.<p>
</li>

<li><kbd>AllChars.gml</kbd><br/>
A Girder script for displaying all possible characters sixteen at a
time.  Useful for working out a custom character map.<p>
</li>

</ul>

<h3>Getting started</h3>
<ul>

<li>You can interface to the display directly or through LCDriver.
LCDriver is a control panel applet that provides a standard driver
that supports many kinds of displays and that can be used by multiple
applications.  (Unfortunately, multiple applications cannot use the
display <em>at the same time</em> in the present version.)  Any
hardware that works with this driver ought to work with this plug-in.
LCDriver can be downloaded from <a href="http://lcdriver.pointofnoreturn.org/">
this site</a>.  If you want to use LCDriver, it should be installed,
configured and tested before selecting LCDriver as the device.<p>
</li>

<li>An HD44780 LCD controller can be connected directly to a parallel
(printer) port.  The necessary simple circuit is outlined 
<a href="http://www.newtsplace.com/~newt/lcd/">here</a> and 
<a href="http://www.geocities.com/ResearchTriangle/1495/ee_lcd.html">here</a>.<p>

A Windows device driver that gives low-level access to the parallel
port is needed.  This plug-in uses PortIO, which is available from 
<a href="http://www.driverlinx.com/Software_Products/softwareproducts.htm">this site</a>.
It should be installed before selecting Parallel as the device.<p>
</li>

<li>Once the hardware is installed and any driver has been installed,
launch Girder and select the Settings menu item under File.  Enable
the LCD plug-in (check its checkbox and Apply).
</li>

<li>With the LCD plug-in still selected in the dialog, click the Settings button.
</li>

<li>Choose the device type that corresponds to the display being used.
If there is an error right away loading a DLL, check that the
necessary device specific file was installed along with any necessary
driver.<p>
</li>

<li>Click the Test... button.  Some simple text should be displayed.
If not, double check the hardware connections and settings.<p>
</li>

<li>The plug-in is now ready for use with Girder.<p>

The most interesting use is together with the DVDSpy plug-in, which
generates events when the state of a software media player changes.
These events are accompanied by payload text, which can be displayed
using variable <code>pld<i>n</i></code>.  See the <a
href="../dvdspy/readme.htm">readme</a> file for that
plug-in for more details.  A sample Girder file is included that
displays some information in a format suitable for 4x20 displays.<p>
</li>

</ul>


<h3>Use</h3>
This plug-in displays bits of text on chosen area of the display.
The area is specified by the starting row and column and the number of
characters.  The text can come from several places:
<ul>
<li>A fixed string, possibly expanding variables.
<li>The contents of a string variable, as set by some other plug-in,
or the event payload.
<li>The current date and time, formatted using a <code>strftime</code> control string.
</ul>
<p>
A number of lines of the display can be filled at once.  This does not
give as fine control over placement or width.  It is most suitable when a number
of variables are being expanded in the text.
<p>
Several special actions that are also possible:
<ul>
<li>Clearing the display.
<li>Closing the display so that it can be used by other applications.
<li>The contents of a string variable, interpreted as a filename.  Any
directory and file type portion of the name are stripped before
display.
<li>Displaying a single character (such as a control character), given its integer code.
</ul>
<p>

<h3>Hardware specific capabilities</h3>

<ul>

<li>Contrast and Brightness<br>

Most LCD displays have software contrast controls.  Most VFD displays
have software brightness controls.  Some backlit LCD displays have
software brightness control for the backlight.  One or the other of
contrast and brightness can be set in the plug-in Settings dialog.<p>
</li>

<li>Marquee mode<br>

Crystalfontz devices support a continuous horizontal scrolling display
one line of the display.  This works both with LCDriver and the direct
serial connection.  Text that is too large to display all at once (up
to twice the width of the display) can be displayed in this way by
choosing Marquee.  The text occupies the entire row; neither the
starting column nor the width is given.  If the actual text fits in
the row, it is just displayed normally.  For other kinds of devices,
marquee is simulated, with a lot more flickering, by redrawing the
entire row periodically.  Crystalfontz displays can scroll by less
than a single character width; the simulated display always draws
whole characters.<p>
</li>

<li>Custom characters<br>

Most displays allow up to eight application defined characters.  This
plug-in takes care of managing the allocation of custom character
indices based on what is being displayed.  The command specifies the
position on the display and the bits that make up the character.<p>

The character definition consists of eight numbers, one for each row.
The five least significant bits of each number are the five dots of
the row, with the most significant bit on the left.  For conventience,
<code>0b</code> is allowed as a number prefix for binary numbers.  So,
for example,
<pre>
    0b11110
    0b10001
    0b10001
    0b11110
    0b10100
    0b10010
    0b10001
</pre>
is shaped like a capital R.<p>
</li>

<li>Keypad input<br>

Some Matrix Orbital displays have a keypad row/column matrix, which
can be wired to a keypad membrane overlay (or a bunch of push buttons).  
If enabled in the plug-in Settings dialog, pressing a keypad button will
generate a Girder event.<p>
</li>

<li>General purpose output<br>

Most Matrix Orbital displays have one or more general purpose outputs
(GPOs).  These are low-current 5VDC outputs suitable for connecting to
LEDs, fans, and relays.  If the chosen display has GPOs, there is a
special action to turn one on or off.<p>
</li>

</ul>

<h3>Registry</h3>

Settings for the plug-in are stored in the registry key
<kbd>HKEY_LOCAL_MACHINE\Software\Girder3\SoftPlugins\LCD</kbd>.  Most,
but not all, are controlled through the Settings dialog.  Here is a
complete reference to the values used.<p>

<table>

<tr><td><kbd>Library</kbd></td>
<td>
The name of the DLL containing the device specific interface.
</td>

<tr><td><kbd>Device</kbd></td>
<td>
The name of the specific device being used; often the display model number.
</td>

<tr><td><kbd>Cols</kbd></td>
<td>
The number of columns.
</td>

<tr><td><kbd>Rows</kbd></td>
<td>
The number of rows.
</td>

<tr><td><kbd>CharacterMap</kbd></td>
<td>
The device code to use for each character.  Many displays put
characters like <code>¥</code> where <code>\</code> and <code>~</code>
should be.  Most displays have accented European characters at non-standard
indices.  Some displays have variants of <code>g</code>, <code>j</code>, <code>p</code>,
<code>q</code>, and <code>y</code> with proper descenders at different codes; since
the underline cursor is not used, these can yield a superior display.
</td>

<tr><td><kbd>MarqueePixelWidth</kbd></td>
<td>
The number of pixels to shift a scrolling display each time.  By convention, 6 pixels
represents a single character when computing the frequency of the simulated marquee,
which cannot scroll by a partial character.  The default is <kbd>6</kbd>.
</td>

<tr><td><kbd>MarqueeSpeed</kbd></td>
<td>
The interval, in milliseconds, between shifts of a scrolling display.  When simulating
a marquee, both the speed and pixel width are taken into account when computing the
frequency of redrawing.  The default is <kbd>1000</kbd>, that is, one second.
</td>

<tr><td><kbd>Contrast</kbd></td>
<td>
The contrast setting for an LCD.  A number between 0 and 100.  The
default is <kbd>50</kbd>.
</td>

<tr><td><kbd>Brightness</kbd></td>
<td>
The brightness setting for a VFD, or the backlight brightness for a
backlit LCD.  A number between 0 and 100.  The default is
<kbd>50</kbd>.
</td>

<tr><td><kbd>EnableInput</kbd></td>
<td>
Translate keypad button presses into Girder events.
</td>

<tr><td><kbd>Port</kbd></td>
<td>
The name of the serial port device, such as <kbd>COM1</kbd>.
</td>

<tr><td><kbd>PortSpeed</kbd></td>
<td>
The speed of the serial port, such as <kbd>9600</kbd>.
</td>

<tr><td><kbd>PortRTS</kbd></td>
<td>
Whether RTS is turned on for the serial line.  The default is on.
</td>

<tr><td><kbd>PortDTR</kbd></td>
<td>
Whether DTR is turned on for the serial line.  The default is on.
</td>

<tr><td><kbd>MarqueeSimulated</kbd></td>
<td>
For LCDriver, whether a marquee is simulated in software.  Necessary
when using LCDriver with a display other than Crystalfontz.
</td>

<tr><td><kbd>ParallelStrobeDelay</kbd></td>
<td>
The interval, in milliseconds, to wait for the HD44780 to notice a signal transition.
If you have a slow HD44780, try increasing this number.
</td>

<tr><td><kbd>ParallelCommandDelay</kbd></td>
<td>
The interval, in milliseconds, to wait for the HD44780 to process a command or shift the
data register.  If you have a slow HD44780, try increasing this number.
</td>

<tr><td><kbd>SimLCDFontSize</kbd></td>
<td>
The font size in the Simulated LCD window.  The default is <kbd>10</kbd>.
</td>

<tr><td><kbd>SimLCDFont</kbd></td>
<td>
The font face name in the Simulated LCD window.  The default is <kbd>Courier New</kbd>.
</td>

<tr><td><kbd>SimLCDFontStyle</kbd></td>
<td>
The font style in the Simulated LCD window.  The default is <kbd>Bold</kbd>.
</td>

<tr><td><kbd>SimLCDTextColor</kbd></td>
<td>
The text (foreground) color in the Simulated LCD window.  A single RGB value.
The default is black.
</td>

<tr><td><kbd>SimLCDBackColor</kbd></td>
<td>
The background color in the Simulated LCD window.  A single RGB value.
The default is a greenish yellow.
</td>

<tr><td><kbd>SimLCDXPos</kbd></td>
<td>
The X position of the Simulated LCD window.  The default is the last position.
</td>

<tr><td><kbd>SimLCDYPos</kbd></td>
<td>
The Y position of the Simulated LCD window.  The default is the last position.
</td>

<tr><td><kbd>SimLCDAlwaysOnTop</kbd></td>
<td>
Whether the Simulated LCD window stays on top of other windows.  The default is on.
</td>

</table>

<h3>Disclaimer</h3>
You use this plug-in at your own risk.

<h3>Contact</h3>
To report problems or make suggestions, post a message to the Girder
forum, rather than sending email directly.

</body>

</html>
